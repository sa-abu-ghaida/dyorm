name: ci

on: [ push ]

jobs:
  check-quality:
    runs-on: ubuntu-latest
    name: Codiga Check
    steps:
      - name: Check code meets quality standards
        id: codiga
        uses: codiga/github-action@master
        with:
          repo_token: ${{ secrets.DYORM_GITHUB_TOKEN }}
          codiga_api_token: ${{ secrets.CODIGA_API_TOKEN }}
          min_quality_grade: 'WARNING'
          min_quality_score: '50'
          max_defects_rate: '0.2'
          max_complex_functions_rate: '0.0001'
          max_long_functions_rate: '0.0001'
          project_name: 'github-action-example'
          max_timeout_sec: '600'
      - name: Check code meets quality standards with forced branch
        id: codiga-with-forced-branch
        uses: codiga/github-action@master
        with:
          repo_token: ${{ secrets.DYORM_GITHUB_TOKEN }}
          codiga_api_token: ${{ secrets.CODIGA_API_TOKEN }}
          force_ref: ${{ github.event.inputs.BRANCH }}
          min_quality_grade: 'WARNING'
          min_quality_score: '50'
          max_defects_rate: '0.2'
          max_complex_functions_rate: '0.0001'
          max_long_functions_rate: '0.0001'
          project_name: 'github-action-example'
          max_timeout_sec: '600'
  test:
    name: unit-tests
    runs-on: ubuntu-latest

    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: checkout the code
        uses: actions/checkout@v3

      - name: preparing git config
        env:
          GITHUB_USER: ${{ secrets.DYORM_GITHUB_USER }}
          GITHUB_TOKEN: ${{ secrets.DYORM_GITHUB_TOKEN }}
        run: git config --global url."https://$GITHUB_USER:$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"

      - name: fetch dependencies
        run: go mod download

      - name: Check code meets quality standards
        id: codiga
        uses: codiga/github-action@master
        with:
          repo_token: ${{ secrets.DYORM_GITHUB_TOKEN }}
          codiga_api_token: ${{ secrets.CODIGA_API_TOKEN }}
          min_quality_grade: 'WARNING'
          min_quality_score: '50'
          max_defects_rate: '0.2'
          max_complex_functions_rate: '0.0001'
          max_long_functions_rate: '0.0001'
          project_name: 'github-action-example'
          max_timeout_sec: '600'

      - name: Check code meets quality standards with forced branch
        id: codiga-with-forced-branch
        uses: codiga/github-action@master
        with:
          repo_token: ${{ secrets.DYORM_GITHUB_TOKEN }}
          codiga_api_token: ${{ secrets.CODIGA_API_TOKEN }}
          force_ref: ${{ github.event.inputs.BRANCH }}
          min_quality_grade: 'WARNING'
          min_quality_score: '50'
          max_defects_rate: '0.2'
          max_complex_functions_rate: '0.0001'
          max_long_functions_rate: '0.0001'
          project_name: 'github-action-example'
          max_timeout_sec: '600'

      - name: run test race with coverage
        run: make coverage-badge

      - name: Upload coverage report
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt
          fail_ci_if_error: true
